/* sets up blink animation. transitions from 100% visible to completely clear */
@-webkit-keyframes blinker {  
  from { opacity: 1.0; }
  to { opacity: 0.0; }
}
@-moz-keyframes blinker {  
  from { opacity: 1.0; }
  to { opacity: 0.0; }
}
/* // end blink animation */

/* 
animation that emulates a typing system.
realistically this is simply a covering element that is slowly made smaller to reveal text underneath */
@-webkit-keyframes typing {
    0% {width: 100%}
    80% {width: 0%}
    100% {width: 0%}
}
@-moz-keyframes typing {
    0% {width: 100%}
    80% {width: 0%}
    100% {width: 0%}
}
/* // end typing animation */

/*
this animation emulates the blinking of the cursor text.
realistically it's just turning the border of the covering div on and off */
@-webkit-keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: white }
}
@-moz-keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: white }
}
/* // end blinking caret */

.css3-blink {
    /* runs the blinker animation once per second, forever */
    -webkit-animation: blinker 1s cubic-bezier(1.0,0,0,1.0) infinite;
    -moz-animation: blinker 1s cubic-bezier(1.0,0,0,1.0) infinite;
    animation: blinker 1s cubic-bezier(1.0,0,0,1.0) infinite;
}			

table.environmentsTable td.leader.building code.building span {
    /* defines the position fo the covering element for the typing animation. 
    Then runs the animation over 4 seconds, looping infinitely.
    The blinking caret (seconds) should be the multiplier for the steps to arrive at the duration */
    position:absolute;
    right: 0;
    top: 10px; /* this has to match any padding on the element with the cursor */
    width: 0; 
    background: blue; /* same as background */
    color: #fff;
    border-left: .1em solid white;
    font-family: monospace;
    color: transparent;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    
    -webkit-animation: typing 4s steps(8, end) infinite, /* # of steps = # of characters */ 
                        blink-caret 0.5s step-end infinite;
    -moz-animation: typing 4s steps(8, end), /* # of steps = # of characters */
                        blink-caret 0.5s step-end infinite;
} 

table.environmentsTable td.leader.failed code.failed::before {
    /* generates an exclamation point for a failed build. must be in a separate pseudo element because the border property is used for the rest of the 'sign'.*/
    content: "!";
    position: absolute;
    top: 10px;
    left: 6px;
    font-weight: bold;
    color: #000;
    z-index: 2;
}

table.environmentsTable td.leader.failed code.failed::after {
    /* generates a triangle using border manipulation */
    content: "";
    position: absolute;
    top: 55%;
    left: 0;
    z-index: 1;
    border-width: 0 14px 24px;
    border-style: solid;
    border-color: #F8D201 transparent;
    margin-top: -10px;
    background: transparent;
}
